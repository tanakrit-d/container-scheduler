name: Docker Release Build

on:
  push:
    branches:
      - master
    tags: ["v*.*.*"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: "v2.2.4"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=sha
          annotations: |
            org.opencontainers.image.title=${IMAGE_NAME}
            org.opencontainers.image.description=Multi-architecture Docker image
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            maintainer=${{ github.repository_owner }}
            com.github.repo=${{ github.repository }}
            com.github.sha=${{ github.sha }}
            com.github.ref=${{ github.ref }}
            com.github.workflow=${{ github.workflow }}

      - name: Verify build configuration
        run: |
          echo "Building for platforms: ${{ env.PLATFORMS }}"
          echo "Tags to be created: ${{ steps.meta.outputs.tags }}"
          echo "Labels to be applied: ${{ steps.meta.outputs.labels }}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: true

      - name: Verify manifests
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_REF="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '); do
            echo "Verifying manifest for: $tag"
            docker buildx imagetools inspect $tag
          done

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Verify signatures
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          while IFS= read -r tag; do
            if [ ! -z "$tag" ]; then
              echo "Verifying signature for $tag"
              cosign verify \
                --certificate-identity-regexp "^https://github.com/tanakrit-d/container-scheduler/.github/workflows/docker-publish.yml@refs/tags/v.*$" \
                --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
                "$tag@${DIGEST}"
            fi
          done <<< "${TAGS}"